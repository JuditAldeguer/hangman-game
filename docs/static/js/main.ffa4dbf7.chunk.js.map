{"version":3,"sources":["images/favicon-ahorcado.jpg","components/App.js","index.js"],"names":["App","useState","numberOfErrors","setNumberOfErrors","introducedLetter","setintroducedLetter","word","feedback","setFeedback","userLetters","setUserLetters","className","split","map","x","class","found","filter","l","includes","console","log","renderErrorLetters","htmlFor","onChange","ev","letter","currentTarget","value","test","push","autoComplete","maxLength","type","name","id","onClick","ReactDOM","render","document","getElementById"],"mappings":"wKAAe,I,MCiJAA,MA7If,WAEE,MAA0CC,mBAAS,GAAnD,mBAAKC,EAAL,KAAqBC,EAArB,KACA,EAAgDF,mBAAS,IAAzD,mBAAOG,EAAP,KAAyBC,EAAzB,KACA,EAAwBJ,mBAAS,cAAjC,mBAAOK,EAAP,KACA,GADA,KACgCL,mBAAS,KAAzC,mBAAOM,EAAP,KAAiBC,EAAjB,KACA,EAAsCP,mBAAS,IAA/C,mBAAOQ,EAAP,KAAoBC,EAApB,KAwEA,OACE,sBAAKC,UAAU,OAAf,UACE,iCACE,oBAAIA,UAAU,gBAAd,kCAEF,uBAAMA,UAAU,OAAhB,UACE,oCACE,sBAAKA,UAAU,WAAf,UACE,oBAAIA,UAAU,QAAd,0BACA,qBAAIA,UAAU,UAAd,UApBYL,EAAKM,MAAM,IACZC,KAAI,SAACC,GAAD,OAAO,oBAAIC,MAAM,cAmBhC,UAIF,sBAAKJ,UAAU,WAAf,UACE,oBAAIA,UAAU,QAAd,8BACA,oBAAIA,UAAU,UAAd,SAtBiB,WACzB,IAAMK,EAAQP,EAAYQ,QAAO,SAACC,GAAD,OAAQZ,EAAKa,SAASD,MAEvD,OADAE,QAAQC,IAAIL,GACLA,EAAMH,KAAI,SAACK,GAAD,OAAO,oBAAIP,UAAU,SAAd,SAAwBO,OAmBfI,QAE3B,uBAAMX,UAAU,OAAhB,UACE,uBAAOA,UAAU,QAAQY,QAAQ,cAAjC,gCAGA,uBACEC,SA3DmB,SAACC,GAC9B,IAAMC,EAASD,EAAGE,cAAcC,MACnB,4CACJC,KAAKH,IACZrB,EAAoBqB,GACpBlB,EAAY,IACG,KAAXkB,GAA4B,MAAXA,IACdjB,EAAYU,SAASO,KACxBjB,EAAYqB,KAAKJ,GACjBhB,EAAeD,OAInBD,EAAY,6DACZH,EAAoBqB,KA8CZK,aAAa,MACbpB,UAAU,cACVqB,UAAU,IACVC,KAAK,OACLC,KAAK,cACLC,GAAG,cACHP,MAAOxB,IAET,uBACA,4BAAIG,IACJ,wBACEI,UAAU,mBACVsB,KAAK,SACLG,QA7ES,SAACX,GACpBvB,IACAC,EAAkBD,IAwEV,+BASJ,0BAASS,UAAS,sBAAiBT,GAAnC,UACE,sBAAMS,UAAU,iBAChB,sBAAMA,UAAU,iBAChB,sBAAMA,UAAU,kBAChB,sBAAMA,UAAU,kBAChB,sBAAMA,UAAU,iBAChB,sBAAMA,UAAU,iBAChB,sBAAMA,UAAU,iBAChB,sBAAMA,UAAU,iBAChB,sBAAMA,UAAU,iBAChB,sBAAMA,UAAU,iBAChB,sBAAMA,UAAU,iBAChB,sBAAMA,UAAU,iBAChB,sBAAMA,UAAU,iBAChB,sBAAMA,UAAU,2BCtI1B0B,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,U","file":"static/js/main.ffa4dbf7.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/favicon-ahorcado.01a205ca.jpg\";","import '../styles/App.scss';\nimport ahorcado from '../images/favicon-ahorcado.jpg';\nimport { useState } from 'react';\n\nfunction App() {\n  //estados\n  let [numberOfErrors, setNumberOfErrors] = useState(0);\n  const [introducedLetter, setintroducedLetter] = useState('');\n  const [word, setWord] = useState('katakroker');\n  const [feedback, setFeedback] = useState('');\n  const [userLetters, setUserLetters] = useState([]);\n  //const [error, setError] = useState([]);\n  //const [solution, setSolution] = useState([]);\n\n  //funciones\n  // const answerSolution = () => {\n  //   if (word.includes(introducedLetter)) {\n  //     if (!solution.includes(introducedLetter)) {\n  //       setSolution(introducedLetter);\n  //       setFeedback('Has acertado!');\n  //       //fallo\n  //       //<li className=\"letter\">f</li>\n  //     } else {\n  //       setFeedback(\n  //         'ERROR: ya has escrito esta letra antes y si es parte de la palabra.'\n  //       );\n  //     }\n  //   } else {\n  //     if (!error.includes(introducedLetter)) {\n  //       setError(introducedLetter);\n  //       //fallo\n  //       //<li className=\"letter\">f</li>\n  //       setFeedback('Has fallado... Prueba otra vez!');\n  //     } else {\n  //       setFeedback(\n  //         'ERROR: ya has escrito esta letra antes y no es parte de la palabra.'\n  //       );\n  //     }\n  //   }\n  // };\n\n  const handleErrors = (ev) => {\n    numberOfErrors++;\n    setNumberOfErrors(numberOfErrors);\n  };\n  const handleIntroducedLetter = (ev) => {\n    const letter = ev.currentTarget.value;\n    const patt = /^[a-zA-Záéíóúñü]{1}$/;\n    if (patt.test(letter)) {\n      setintroducedLetter(letter);\n      setFeedback('');\n      if (letter !== '' && letter !== ' ') {\n        if (!userLetters.includes(letter)) {\n          userLetters.push(letter);\n          setUserLetters(userLetters);\n        }\n      }\n    } else {\n      setFeedback('ERROR: debes escribir una letra del abecedario castellano');\n      setintroducedLetter(letter);\n    }\n  };\n\n  const getSolution = () => {\n    //------------Array ex 5 -----------------------------------------------------------\n    // const found = userLetters.findIndex((l) => word.includes(l));\n    // const letter = found.split('');\n    // return letter;\n  };\n  const renderSolutionLetters = () => {\n    getSolution();\n    const wordLetters = word.split('');\n    return wordLetters.map((x) => <li class=\"letter\">{}</li>); //pendiente añadir letra\n  };\n\n  const renderErrorLetters = () => {\n    const found = userLetters.filter((l) => !word.includes(l));\n    console.log(found);\n    return found.map((l) => <li className=\"letter\">{l}</li>);\n  };\n\n  //return\n  return (\n    <div className=\"page\">\n      <header>\n        <h1 className=\"header__title\">Juego del ahorcado</h1>\n      </header>\n      <main className=\"main\">\n        <section>\n          <div className=\"solution\">\n            <h2 className=\"title\">Solución:</h2>\n            <ul className=\"letters\">\n              {renderSolutionLetters()} {/* //pendiente--------------- */}\n            </ul>\n          </div>\n          <div className=\"feedback\">\n            <h2 className=\"title\">Letras falladas:</h2>\n            <ul className=\"letters\">{renderErrorLetters()}</ul>\n          </div>\n          <form className=\"form\">\n            <label className=\"title\" htmlFor=\"last-letter\">\n              Escribe una letra:\n            </label>\n            <input\n              onChange={handleIntroducedLetter}\n              autoComplete=\"off\"\n              className=\"form__input\"\n              maxLength=\"1\"\n              type=\"text\"\n              name=\"last-letter\"\n              id=\"last-letter\"\n              value={introducedLetter}\n            />\n            <br />\n            <p>{feedback}</p>\n            <button\n              className=\"button_increment\"\n              type=\"button\"\n              onClick={handleErrors}\n            >\n              Incrementar\n            </button>\n          </form>\n        </section>\n        <section className={`dummy error-${numberOfErrors}`}>\n          <span className=\"error-13 eye\"></span>\n          <span className=\"error-12 eye\"></span>\n          <span className=\"error-11 line\"></span>\n          <span className=\"error-10 line\"></span>\n          <span className=\"error-9 line\"></span>\n          <span className=\"error-8 line\"></span>\n          <span className=\"error-7 line\"></span>\n          <span className=\"error-6 head\"></span>\n          <span className=\"error-5 line\"></span>\n          <span className=\"error-4 line\"></span>\n          <span className=\"error-3 line\"></span>\n          <span className=\"error-2 line\"></span>\n          <span className=\"error-1 line\"></span>\n          <span className=\"error-0 line\"></span>\n        </section>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n\n//PENDIENTE---------------------\n//escuchar: solución, letra introducida por usuaria-OK\n\n//useState: array( letras correctas de la solución), array (letras falladas = introducida - correctas), array (letra introducida),array (número de errores)\n\n//Acción tras solución correcta\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}